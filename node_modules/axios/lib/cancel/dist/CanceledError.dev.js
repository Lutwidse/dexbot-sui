'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _AxiosError = _interopRequireDefault(require("../core/AxiosError.js"));

var _utils = _interopRequireDefault(require("../utils.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

/**
 * A `CanceledError` is an object that is thrown when an operation is canceled.
 *
 * @param {string=} message The message.
 * @param {Object=} config The config.
 * @param {Object=} request The request.
 *
 * @returns {CanceledError} The created error.
 */
function CanceledError(message, config, request) {
  // eslint-disable-next-line no-eq-null,eqeqeq
  _AxiosError["default"].call(this, message == null ? 'canceled' : message, _AxiosError["default"].ERR_CANCELED, config, request);

  this.name = 'CanceledError';
}

_utils["default"].inherits(CanceledError, _AxiosError["default"], {
  __CANCEL__: true
});

var _default = CanceledError;
exports["default"] = _default;