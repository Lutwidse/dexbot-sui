"use strict";

var _child_process = require("child_process");

function _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _nonIterableSpread(); }

function _nonIterableSpread() { throw new TypeError("Invalid attempt to spread non-iterable instance"); }

function _iterableToArray(iter) { if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === "[object Arguments]") return Array.from(iter); }

function _arrayWithoutHoles(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } }

var args = process.argv.slice(2);
console.log("Running ".concat(args.join(' '), " on ").concat(process.version, "\n"));
var match = /v(\d+)/.exec(process.version);
var isHotfixNeeded = match && match[1] > 16;
isHotfixNeeded && console.warn('Setting --openssl-legacy-provider as ssl hotfix');
var test = (0, _child_process.spawn)('cross-env', isHotfixNeeded ? ['NODE_OPTIONS=--openssl-legacy-provider'].concat(_toConsumableArray(args)) : args, {
  shell: true,
  stdio: 'inherit'
});
test.on('exit', function (code) {
  process.exit(code);
});