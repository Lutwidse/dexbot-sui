"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _pluginNodeResolve = _interopRequireDefault(require("@rollup/plugin-node-resolve"));

var _pluginCommonjs = _interopRequireDefault(require("@rollup/plugin-commonjs"));

var _rollupPluginTerser = require("rollup-plugin-terser");

var _pluginJson = _interopRequireDefault(require("@rollup/plugin-json"));

var _pluginBabel = require("@rollup/plugin-babel");

var _rollupPluginAutoExternal = _interopRequireDefault(require("rollup-plugin-auto-external"));

var _rollupPluginBundleSize = _interopRequireDefault(require("rollup-plugin-bundle-size"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

function _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _nonIterableSpread(); }

function _nonIterableSpread() { throw new TypeError("Invalid attempt to spread non-iterable instance"); }

function _iterableToArray(iter) { if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === "[object Arguments]") return Array.from(iter); }

function _arrayWithoutHoles(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } }

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }

function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }

var lib = require("./package.json");

var outputFileName = 'axios';
var name = "axios";
var input = './lib/axios.js';

var buildConfig = function buildConfig(_ref) {
  var es5 = _ref.es5,
      _ref$browser = _ref.browser,
      browser = _ref$browser === void 0 ? true : _ref$browser,
      _ref$minifiedVersion = _ref.minifiedVersion,
      minifiedVersion = _ref$minifiedVersion === void 0 ? true : _ref$minifiedVersion,
      config = _objectWithoutProperties(_ref, ["es5", "browser", "minifiedVersion"]);

  var build = function build(_ref2) {
    var minified = _ref2.minified;
    return _objectSpread({
      input: input
    }, config, {
      output: _objectSpread({}, config.output, {
        file: "".concat(config.output.file, ".").concat(minified ? "min.js" : "js")
      }),
      plugins: [(0, _pluginJson["default"])(), (0, _pluginNodeResolve["default"])({
        browser: browser
      }), (0, _pluginCommonjs["default"])(), minified && (0, _rollupPluginTerser.terser)(), minified && (0, _rollupPluginBundleSize["default"])()].concat(_toConsumableArray(es5 ? [(0, _pluginBabel.babel)({
        babelHelpers: 'bundled',
        presets: ['@babel/preset-env']
      })] : []), _toConsumableArray(config.plugins || []))
    });
  };

  var configs = [build({
    minified: false
  })];

  if (minifiedVersion) {
    configs.push(build({
      minified: true
    }));
  }

  return configs;
};

var _callee = function _callee() {
  var year, banner;
  return regeneratorRuntime.async(function _callee$(_context) {
    while (1) {
      switch (_context.prev = _context.next) {
        case 0:
          year = new Date().getFullYear();
          banner = "// Axios v".concat(lib.version, " Copyright (c) ").concat(year, " ").concat(lib.author, " and contributors");
          return _context.abrupt("return", [].concat(_toConsumableArray(buildConfig({
            es5: true,
            output: {
              file: "dist/".concat(outputFileName),
              name: name,
              format: "umd",
              exports: "default",
              banner: banner
            }
          })), _toConsumableArray(buildConfig({
            output: {
              file: "dist/esm/".concat(outputFileName),
              format: "esm",
              preferConst: true,
              exports: "named",
              banner: banner
            }
          })), [// Node.js commonjs build
          {
            input: input,
            output: {
              file: "dist/node/".concat(name, ".cjs"),
              format: "cjs",
              preferConst: true,
              exports: "default",
              banner: banner
            },
            plugins: [(0, _rollupPluginAutoExternal["default"])(), (0, _pluginNodeResolve["default"])(), (0, _pluginCommonjs["default"])()]
          }]));

        case 3:
        case "end":
          return _context.stop();
      }
    }
  });
};

exports["default"] = _callee;